{"name":"Full Inspector","tagline":"Unity inspector support for all .NET types","body":"### Inspect Everything\r\n\r\nSimply extend from `BaseBehavior` instead of `MonoBehaviour`, and you'll be able to use any of the following types in your behaviors:\r\n\r\n* interfaces/abstract types (you select the concrete implementation in the inspector)\r\n* structs\r\n* dictionaries\r\n* arbitrary generic types\r\n* properties\r\n* a better array / list editor (using [Rotorz](https://bitbucket.org/rotorz/reorderable-list-editor-field-for-unity))\r\n* tooltips and comments via attributes on fields/properties/types\r\n\r\nFor example, using a dictionary couldn't be easier. Here's how to do it:\r\n\r\n    [JsonObject(MemberSerialization.OptIn)]\r\n    public class DictionaryDemoBehavior : BaseBehavior {\r\n      [JsonProperty]\r\n      public Dictionary<string, GameObject> StringGameObjectDictionary;\r\n    }\r\n\r\nFull Inspector cleanly integrates [Json.NET](http://james.newtonking.com/json) serialization into Unity.\r\n\r\n### Issues\r\n\r\nIf you have found a bug or general issue, please report it [here](https://github.com/jacobdufault/fullinspector/issues).\r\n","google":"UA-47723714-1","note":"Don't delete this file! It's used internally to help with page regeneration."}